<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stylish Weather App</title>
    <style>
        /* Background Styling */
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background: linear-gradient(135deg, #89cff0, #74b9ff);
            overflow: hidden;
        }

        /* Floating Gradient Circles for Background */
        .circle {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            animation: float 6s ease-in-out infinite;
            opacity: 0.7;
        }

        .circle.one { width: 200px; height: 200px; top: 10%; left: 20%; animation-duration: 8s; }
        .circle.two { width: 300px; height: 300px; top: 60%; left: 80%; animation-duration: 10s; }
        .circle.three { width: 250px; height: 250px; top: 40%; left: 50%; animation-duration: 7s; }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        /* Weather Container */
        .weather-container {
            width: 100%;
            max-width: 400px;
            background-color: #ffffff;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            text-align: center;
            position: relative;
            z-index: 1;
            animation: fadeIn 1s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.9); }
            to { opacity: 1; transform: scale(1); }
        }

        /* Title */
        h2 {
            color: #333333;
            margin-bottom: 20px;
            font-size: 1.8rem;
        }

        /* Weather Icon */
        .weather-icon {
            width: 100px;
            height: 100px;
            margin: 10px auto;
        }

        /* Weather Info Styling */
        .weather-info {
            font-size: 1.2rem;
            color: #555555;
            margin: 15px 0;
            min-height: 50px;
        }

        /* Input and Button Styling */
        input[type="text"] {
            padding: 10px;
            font-size: 1rem;
            width: 70%;
            border-radius: 8px;
            border: 1px solid #cccccc;
            margin-bottom: 15px;
        }

        button {
            padding: 10px 15px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #2980b9;
        }
    </style>
</head>
<body>

    <!-- Floating Circles for Background Effect -->
    <div class="circle one"></div>
    <div class="circle two"></div>
    <div class="circle three"></div>

    <!-- Weather Container -->
    <div class="weather-container">
        <h2>Weather App</h2>
        <input type="text" id="cityInput" placeholder="Enter city name" />
        <button onclick="fetchWeather()">Get Weather</button>
        <div id="weatherInfo" class="weather-info">Enter a city to get the weather.</div>
        <img id="weatherIcon" class="weather-icon" src="" alt="Weather Icon" style="display: none;">
    </div>

    <!-- JavaScript for Fetching Weather Data -->
    <script>
        async function fetchWeather() {
            const city = document.getElementById("cityInput").value;
            const apiKey = "YOUR_API_KEY"; // Replace with your OpenWeatherMap API key
            const weatherInfo = document.getElementById("weatherInfo");
            const weatherIcon = document.getElementById("weatherIcon");

            if (!city) {
                weatherInfo.textContent = "Please enter a city name.";
                return;
            }

            weatherInfo.textContent = "Loading..."; // Display loading text
            weatherIcon.style.display = "none"; // Hide icon initially

            try {
                // Fetch weather data from OpenWeatherMap API
                const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);
                const data = await response.json();

                if (data.cod === "404") {
                    weatherInfo.textContent = "City not found. Please try again.";
                    return;
                }

                // Display weather data and icon
                const { main, weather, name } = data;
                weatherInfo.innerHTML = `
                    <strong>${name}</strong><br>
                    ${weather[0].description.charAt(0).toUpperCase() + weather[0].description.slice(1)}<br>
                    Temperature: ${main.temp}Â°C<br>
                    Humidity: ${main.humidity}%
                `;
                
                // Set and display the weather icon
                weatherIcon.src = `https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;
                weatherIcon.style.display = "block";

            } catch (error) {
                weatherInfo.textContent = "Oops! Could not fetch weather data.";
                console.error("Error fetching the weather data:", error);
            }
        }
    </script>

</body>
</html>
